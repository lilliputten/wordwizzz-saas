// @see docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map(name: "sessions")
}

model UsedLanguage {
  id   String @id
  name String

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  WordsSet   WordsSet? @relation(fields: [wordsSetId], references: [id])
  wordsSetId String?
  Word       Word[]

  @@map(name: "used_languages")
}

model WordsSet {
  // id   String  @id
  id   String @id @default(cuid())
  name String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  usedLanguages UsedLanguage[]
  Word          Word[]

  @@map(name: "words_sets")
}

model Word {
  id   String @id @default(cuid())
  text String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  wordsSet   WordsSet     @relation(fields: [setId], references: [id])
  setId      String
  language   UsedLanguage @relation(fields: [languageId], references: [id])
  languageId String

  @@map(name: "words")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")
  role          UserRole  @default(USER)

  accounts Account[]
  sessions Session[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  // Data
  usedLanguages UsedLanguage[]
  wordsSet      WordsSet[]
  words         Word[]

  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}
